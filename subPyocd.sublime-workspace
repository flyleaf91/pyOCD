{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pass",
				"password	statement"
			],
			[
				"bui",
				"builtins	module"
			],
			[
				"fal",
				"false"
			]
		]
	},
	"buffers":
	[
		{
			"file": "test/basic_test.py",
			"settings":
			{
				"buffer_size": 7859,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pyOCD/tools/flash_tool.py",
			"settings":
			{
				"buffer_size": 9432,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pyOCD/board/board.py",
			"settings":
			{
				"buffer_size": 2285,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pyOCD/board/mbed_board.py",
			"settings":
			{
				"buffer_size": 10803,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pyOCD/pyDAPAccess/dap_access_usb.py",
			"settings":
			{
				"buffer_size": 26324,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/work/keil5/ARM/Pack/Keil/STM32F1xx_DFP/1.1.0/Keil.STM32F1xx_DFP.pdsc",
			"settings":
			{
				"buffer_size": 220640,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 170 files for \"AHB IDR\"\n\nH:\\GitHub\\pyOCD\\pyOCD\\target\\cortex_m.py:\n  386                  # read/write errors.\n  387                  self.auto_increment_page_size = 0x400\n  388:                 logging.warning(\"Unknown AHB IDR: 0x%x\" % ahb_idr)\n  389  \n  390          if bus_accessible:\n\n1 match in 1 file\n\n\nSearching 170 files for \"DP_REG\"\n\nH:\\GitHub\\pyOCD\\pyOCD\\target\\cortex_m.py:\n   18  \n   19  from .target import Target\n   20: from pyOCD.target.dap import (DP_REG, AP_REG, Dap)\n   21  from pyOCD.pyDAPAccess import DAPAccess\n   22  from ..gdbserver import signals\n   ..\n  366  \n  367              # select bank 0 (to access DRW and TAR)\n  368:             self.dap.writeDP(DP_REG['SELECT'], 0)\n  369:             self.dap.writeDP(DP_REG['CTRL_STAT'], CortexM.CSYSPWRUPREQ | CortexM.CDBGPWRUPREQ)\n  370  \n  371              while True:\n  372:                 r = self.dap.readDP(DP_REG['CTRL_STAT'])\n  373                  if (r & (CortexM.CDBGPWRUPACK | CortexM.CSYSPWRUPACK)) == (CortexM.CDBGPWRUPACK | CortexM.CSYSPWRUPACK):\n  374                      break\n  375  \n  376:             self.dap.writeDP(DP_REG['CTRL_STAT'], CortexM.CSYSPWRUPREQ | CortexM.CDBGPWRUPREQ | CortexM.TRNNORMAL | CortexM.MASKLANE)\n  377:             self.dap.writeDP(DP_REG['SELECT'], 0)\n  378  \n  379              ahb_idr = self.dap.readAP(AP_REG['IDR'])\n  ...\n  499          return the IDCODE of the core\n  500          \"\"\"\n  501:         self.idcode = self.dap.readDP(DP_REG['IDCODE'])\n  502          return self.idcode\n  503  \n\nH:\\GitHub\\pyOCD\\pyOCD\\target\\dap.py:\n   21  \n   22  # !! This value are A[2:3] and not A[3:2]\n   23: DP_REG = {'IDCODE': DAPAccess.REG.DP_0x0,\n   24            'ABORT': DAPAccess.REG.DP_0x0,\n   25            'CTRL_STAT': DAPAccess.REG.DP_0x4,\n   ..\n  184      def writeDP(self, addr, data):\n  185          assert addr in DAPAccess.REG\n  186:         if addr == DP_REG['SELECT']:\n  187              if data == self.dp_select:\n  188                  return\n  ...\n  200          ap_sel = addr & 0xff000000\n  201          bank_sel = addr & APBANKSEL\n  202:         self.writeDP(DP_REG['SELECT'], ap_sel | bank_sel)\n  203  \n  204          if addr == AP_REG['CSW']:\n  ...\n  225              ap_sel = addr & 0xff000000\n  226              bank_sel = addr & APBANKSEL\n  227:             self.writeDP(DP_REG['SELECT'], ap_sel | bank_sel)\n  228              result_cb = self.link.read_reg(ap_reg, now=False)\n  229          except DAPAccess.Error as error:\n  ...\n  256              self.link.write_reg(DAPAccess.REG.DP_0x0, (1 << 2))\n  257          elif mode == DAPAccess.PORT.JTAG:\n  258:             self.link.write_reg(DP_REG['CTRL_STAT'], CTRLSTAT_STICKYERR)\n  259          else:\n  260              assert False\n\n12 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 2758,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "pyOCD/target/dap.py",
			"settings":
			{
				"buffer_size": 7715,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pyOCD/pyDAPAccess/dap_access_api.py",
			"settings":
			{
				"buffer_size": 5018,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pyOCD/target/cortex_m.py",
			"settings":
			{
				"buffer_size": 47808,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pyOCD/pyDAPAccess/interface/hidapi_backend.py",
			"settings":
			{
				"buffer_size": 3716,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pyOCD/pyDAPAccess/interface/pyusb_backend.py",
			"settings":
			{
				"buffer_size": 6166,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 219.0,
		"last_filter": "replpy",
		"selected_items":
		[
			[
				"replpy",
				"SublimeREPL: Python"
			],
			[
				"utf",
				"ConvertToUTF8: Reload with Encoding"
			],
			[
				"sp",
				"SublimeREPL: Python"
			],
			[
				"pi",
				"Package Control: Install Package"
			],
			[
				"map",
				"Markdown Preview: Preview in Browser"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: Li",
				"Package Control: Install Package"
			],
			[
				"package Control",
				"Package Control: Add Channel"
			]
		],
		"width": 348.0
	},
	"console":
	{
		"height": 229.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/H/GitHub/pyOCD",
		"/H/GitHub/pyOCD/pyOCD",
		"/H/GitHub/pyOCD/pyOCD/pyDAPAccess",
		"/H/GitHub/pyOCD/pyOCD/target",
		"/H/GitHub/pyOCD/pyOCD/tools",
		"/H/GitHub/pyOCD/test"
	],
	"file_history":
	[
		"/H/GitHub/pyocdOld/pyOCD/pyOCD/_version.py",
		"/H/GitHub/pyOCD/pyOCD/_version.py",
		"/H/GitHub/pyOCD/.gitignore",
		"/H/GitHub/pyocdOld/pyOCD/pyOCD/pyDAPAccess/cmsis_dap_core.py",
		"/H/GitHub/pyocdOld/pyOCD/pyOCD/pyDAPAccess/dap_access_api.py",
		"/H/GitHub/pyocdOld/pyOCD/pyOCD/pyDAPAccess/dap_access_usb.py",
		"/D/Documents/NetSarang/Xftp/Temporary/access_20160407.log",
		"/D/Documents/NetSarang/Xftp/Temporary/access_20160408.log",
		"/G/论坛备份/cut_nginx_log.sh",
		"/D/Documents/NetSarang/Xftp/Temporary/zhujibao.access [2].log",
		"/G/论坛备份/access.log",
		"/G/论坛备份/chuxue123.com.access.log-20141113",
		"/C/Users/Administrator/Desktop/wdf.py",
		"/C/Users/Administrator/Desktop/testJPEG(1).bin",
		"/C/Users/Administrator/Desktop/testJPEG.bin",
		"/C/Users/Administrator/Desktop/testjpeg.bin",
		"/C/Users/Administrator/Desktop/testJPEGJPET.jpeg",
		"/G/pythonGUI/kivyTest/kivyTest.py",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/tools/pyocd.py",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/gdbserver/gdbserver.py",
		"/C/Users/Administrator/autorun.bat",
		"/G/CSharp工程/摄像头调试助手/wildfire_MultiFuctionalSerial_assistant/wildfire_MultiFuctionalSerial_assistant/network/Network.xaml",
		"/D/work/keil5/ARM/Pack/Keil/STM32F4xx_DFP/2.5.0/Keil.STM32F4xx_DFP.pdsc",
		"/D/work/keil5/ARM/Pack/Keil/STM32F4xx_DFP/2.5.0/Utilities/CPU/cpu_utils.c",
		"/D/work/keil5/ARM/Pack/Keil/STM32F4xx_DFP/2.5.0/Utilities/Fonts/font8.c",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/utility/cmdline.py",
		"/D/work/keil5/ARM/Utilities/HID_Client/ReadMe.txt",
		"/G/STM32F4/F4程序整理/11-7寸—液晶显示英文（显示任意大小文字）/11-LTDC—液晶显示英文（字库在内部FLASH）/Project/RVMDK（uv5）/BF-F429.uvprojx",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/flash/flash_stm32f103rc.py",
		"/D/work/keil5/ARM/Pack/Keil/STM32F4xx_DFP/2.5.0/CMSIS/SVD/STM32F41x.svd",
		"/D/work/keil5/ARM/Pack/Keil/STM32F4xx_DFP/2.5.0/package.xml",
		"/D/work/keil5/ARM/Pack/Keil/STM32F4xx_DFP/2.5.0/CMSIS/SVD/STM32F41x.SFR",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/flash/flash_klxx.py",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/flash/flash.py",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/flash/analyzer/generate_python.py",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/target/cortex_m.py",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/target/dap.py",
		"/D/work/keil5/ARM/Pack/Keil/STM32F4xx_DFP/2.5.0/CMSIS/SVD/STM32F40x.svd",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/flash/flash_builder.py",
		"/D/work/keil5/ARM/Pack/Keil/STM32F4xx_DFP/2.5.0/CMSIS/SVD/STM32F40x.SFR",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/flash/analyzer/readme.txt",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/flash/analyzer/linker_script.ld",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/flash/flash_cortex_m.py",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/tools/flash_tool.py",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/target/target_stm32f103rc.py",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/gdbserver/gdb_websocket.py",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/tools/gdb_server.py",
		"/G/STM32F4/DAP/pyOCD-master/pyOCD/board/board.py",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/User/SublimeREPL.sublime-settings",
		"/G/algs4/algs4-data/movies.txt",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/User/led/bsp_led.c",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/Output/多彩流水灯.lnp",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/Output/多彩流水灯.htm",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/Output/多彩流水灯.build_log.htm",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/Output/BH-F429_多彩流水灯.dep",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/Output/多彩流水灯.hex",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/Output/main.d",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/Output/多彩流水灯.bin",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/必读说明.txt",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/User/main.c",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/Listing/多彩流水灯.map",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/Anaconda/README.md",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/Markdown Preview/MarkdownPreview.sublime-settings",
		"/G/algs4/python/gcd/gcd.py",
		"/G/algs4/python/class/StdIn.py",
		"/G/algs4/python/class/data.txt",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/G/algs4/配置环境/算法（第4版）java环境配置教程—algs4.html",
		"/G/algs4/python/hello/HelloWorld.py",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/Output/elfInfo/多彩流水灯_axf_elfInfo_d.txt",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/Output/elfInfo/多彩流水灯_axf_elfInfo_e.txt",
		"/G/STM32F4/F4程序整理/1-GPIO输出—多彩流水灯/Output/多彩流水灯elfInfo.txt",
		"/C/Users/Administrator/AppData/Roaming/Sublime Text 3/Packages/User/Python.sublime-settings",
		"/G/STM32F4/文档/参考资料/触摸屏/gt9xx_1.8_drivers/Reference Drivers/Reference Drivers/gt9xx.c",
		"/G/python/hello.py",
		"/G/python/request.py",
		"/G/python/RGB24TO16.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"H:\\GitHub\\pyOCD",
			"G:\\STM32F4\\DAP\\pyOCD-master\\pyOCD"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"DP_REG",
			"AHB IDR",
			"ffd9",
			"d9ff",
			"flash",
			"0x20000000",
			"sram",
			"flash_algo_debug",
			"begin_data",
			"auto_increment_page_size",
			"callFunctionAndWait",
			"analyzer",
			"intelhex_available",
			"mid",
			" [",
			"whileListIn",
			"keyInwhileListIn",
			"={}\".",
			"whileListIn",
			"print",
			"whileListIn",
			"hhhtest",
			"scatter",
			"LDR",
			"data",
			"section data",
			".data",
			"channel"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 8,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "test/basic_test.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7859,
						"regions":
						{
						},
						"selection":
						[
							[
								970,
								970
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 124.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "pyOCD/tools/flash_tool.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 9432,
						"regions":
						{
						},
						"selection":
						[
							[
								1096,
								1096
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 399.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "pyOCD/board/board.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2285,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "pyOCD/board/mbed_board.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10803,
						"regions":
						{
						},
						"selection":
						[
							[
								7461,
								7461
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2586.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "pyOCD/pyDAPAccess/dap_access_usb.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26324,
						"regions":
						{
						},
						"selection":
						[
							[
								17726,
								17729
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9235.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/D/work/keil5/ARM/Pack/Keil/STM32F1xx_DFP/1.1.0/Keil.STM32F1xx_DFP.pdsc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 220640,
						"regions":
						{
						},
						"selection":
						[
							[
								26640,
								26640
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/XML/XML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2377.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2758,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										230,
										237
									],
									[
										474,
										480
									],
									[
										690,
										696
									],
									[
										747,
										753
									],
									[
										895,
										901
									],
									[
										1121,
										1127
									],
									[
										1262,
										1268
									],
									[
										1466,
										1472
									],
									[
										1628,
										1634
									],
									[
										1888,
										1894
									],
									[
										2101,
										2107
									],
									[
										2318,
										2324
									],
									[
										2637,
										2643
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								1631,
								1631
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ 	].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 211.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "pyOCD/target/dap.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7715,
						"regions":
						{
						},
						"selection":
						[
							[
								758,
								758
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "pyOCD/pyDAPAccess/dap_access_api.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5018,
						"regions":
						{
						},
						"selection":
						[
							[
								820,
								820
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 115.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "pyOCD/target/cortex_m.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47808,
						"regions":
						{
						},
						"selection":
						[
							[
								18922,
								18922
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1879.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "pyOCD/pyDAPAccess/interface/hidapi_backend.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3716,
						"regions":
						{
						},
						"selection":
						[
							[
								3448,
								3448
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1712.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "pyOCD/pyDAPAccess/interface/pyusb_backend.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6166,
						"regions":
						{
						},
						"selection":
						[
							[
								2810,
								2817
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 98.0,
						"translation.y": 1178.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 228.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Anaconda Python Builder",
	"project": "subPyocd.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"bag",
				"raw_source\\algs4\\edu\\princeton\\cs\\algs4\\Bag.java"
			],
			[
				"coun",
				"raw_source\\algs4\\edu\\princeton\\cs\\algs4\\Counter.java"
			],
			[
				"map",
				"Listing\\多彩流水灯.map"
			],
			[
				"bsp_lc",
				"User\\led\\bsp_led.c"
			],
			[
				"bspc",
				"User\\led\\bsp_led.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 268.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
